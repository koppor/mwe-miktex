name: MiKTeX (Linux)
on:
  push:
    paths:
      - '.github/workflows/miktex-linux.yml'
      - 'example-*.tex'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Build matrix based on files
      id: set-matrix
      run: |
        FILES=$(ls example-*.tex | jq -R -s -c 'split("\n")[:-1]')
        echo "::set-output name=matrix::$FILES"
  miktex:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        filename: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Add ~/bin to PATH
        run: echo "${HOME}/bin" >> $GITHUB_PATH
      - name: "Install MikTeX: apt-get install"
        run: |
          set -e
          sudo gpg --homedir /tmp --no-default-keyring --keyring /usr/share/keyrings/miktex.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys D6BC243565B2087BC3F897C9277A7293F59E4889
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/miktex.gpg] https://miktex.org/download/ubuntu jammy universe" | sudo tee /etc/apt/sources.list.d/miktex.list
          sudo apt-get update -y -q
          sudo apt-get install -qq -y --no-install-recommends miktex
      - run: miktexsetup --verbose finish
      - run: initexmf --verbose --set-config-value=[MPM]AutoInstall=1
      - run: miktex --verbose packages update-package-database
      - run: miktex --verbose packages update
      - run: miktex --verbose packages update
      - run: miktex --verbose packages install cm-super
      - run: miktex fontmaps configure
      - run: miktex --verbose fndb refresh
      - run: initexmf --verbose --update-fndb
      - run: initexmf --verbose --mklinks --force
      - run: updmap
      - run: initexmf --report > miktex-report.txt
      - run: pdflatex ${{ matrix.filename }}
      - uses: actions/upload-artifact@v3
        with:
          name: PDFs-miktex-linux
          path: "*.pdf"
      - uses: actions/upload-artifact@v3
        if: ${{ !cancelled() }}
        with:
          name: logs-miktex-linux
          path: |
            "*.log"
            miktex-report.txt
            "/home/runner/.miktex/texmfs/data/miktex/log/*.log"
